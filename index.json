{"version":1,"lastUpdated":"2023-03-04T07:15:54.924Z","extensions":[{"version":"2.0.1","name":"basics","displayName":"Basics","archiveLocation":"extension-basics/extension-basics.tar.gz","readmeMarkdown":"# Teletron Basics\n\nEssential / basic components and widgets are provided by this extension.\n\nThis is the default installed extension in a new Teletron instance.\n\nIt provides an Iframe, image or text component, paired with 2 label widgets (one remote) and a page reload button.\n\n## Query method\n\nThe remote label widget uses [json-query](https://www.npmjs.com/package/json-query) for the query part\nof the retrieved data. Read the package repository details for more information on how to query the data.\n","keywords":[]},{"version":"2.0.0","name":"calendar","displayName":"calendar","archiveLocation":"extension-calendar/extension-calendar.tar.gz","readmeMarkdown":"# Calendar\n\nAdd your iCal calendars to this extension and display the events on your Teletron display. You can\nchoose to show all upcoming events, or the time of the first and last event of the day.\n\n## Upcoming\n\n![upcoming](docs/upcoming.png)\n\n## First / Last event of the day\n\nThis shows the component (left) that you can configure on your display, and the widget (right).\n\nFor the widget you can choose your own front and backend colors.\n\n![first/last event](docs/day.png)\n\n## iCal calendars\n\nUse the following tutorials to find the iCal URL for your calendar:\n\n- [Google calendar](https://support.pushpay.com/s/article/How-do-I-get-an-iCal-feed-from-Google-Calendar)\n- [Apple calendar](https://www.techrepublic.com/article/how-to-find-your-icloud-calendar-url/)\n- [Office 365](https://support.pushpay.com/s/article/How-do-I-get-an-iCal-link-from-Office-365)\n\nOnce you have found the iCal URL for your calendar you can add it via the CMS. In the left bar there\nwill be a header called **calendars** with the option _calendars_ below it. Here you can manage your\ncalendars. Once a calendar is added, it can be select to be displayed as part of a widget or component.\n\n# Attributions\n\nThe loader is `dot-revolve` from [css-spinners](https://github.com/n3r4zzurr0/svg-spinners).\n","keywords":[]},{"version":"2.0.0","name":"countdown","displayName":"countdown","archiveLocation":"extension-countdown/extension-countdown.tar.gz","readmeMarkdown":"# Countdown\n\nConfigure one or more countdown timers.\n\nIt's possible to configure:\n\n1. The date to countdown to\n2. Optionally a specific time\n3. A title to show above the timer\n4. The text to show when the specified time has been reached.\n\n## Example\n\nThe recording belows show a simple summary of the possibilities. It shows 3 configured\ntimers that each count down to respectively Christmas, Halloween and the next 15 seconds.\n\n![countdown](docs/countdown.gif)\n","keywords":[],"components":{"countdown":{"keywords":["timer","time","counter","countdown"],"displayName":"Countdown","description":"A countdown timer that counts down to a specific date, and optionally a time."}}},{"version":"1.0.0","name":"custom-css","displayName":"Custom CSS","archiveLocation":"extension-custom-css/extension-custom-css.tar.gz","readmeMarkdown":"# Custom CSS\n\nUse this extension to inject custom CSS into your Teletron page. After installation, in the CMS, find the _custom-css_\nheader in the left menu bar.\n\nOn this page you can create multiple CSS styles to inject. Every insertion, update or deletion of the CSS rules are\nimmediately visible on your Teletron displays.\n\n![custom-css gif](docs/custom-css.gif)\n","keywords":[]},{"version":"1.0.3","name":"mm-clock","displayName":"Clock (Magic Mirror)","homepage":"https://github.com/daangemist/teletron-extension-mm-clock","author":"daangemist","archiveLocation":"extension-mm-clock/extension-mm-clock.tar.gz","readmeMarkdown":"# Magic Mirror Clock extension\n\nThis extension is a wrapper around the Magic Mirror [clock module](https://docs.magicmirror.builders/modules/clock.html).\n\nAll credits for its implementation go to its original author(s). Read the software's [copyright notice](https://github.com/MichMich/MagicMirror/blob/master/LICENSE.md). More information on the module can be found in the [MagicMirror docs](https://docs.magicmirror.builders/modules/clock.html).\n\nThis extension wraps this Magic Mirror clock module to work inside [Teletron](https://www.teletron.me) as an extension.\n\n![clock gif](docs/mm-clock.gif)\n\n## Features\n\nThis clock has an extended array of features. It can:\n\n1. Display a digital clock, analog, or both\n2. 12/24 hour display + optionally AM/PM\n3. Show solar and lunar times\n4. Show/hide seconds\n","keywords":["clock","magic-mirror"],"components":{"clock":{"displayName":"Clock","keywords":["time","date","clock"],"description":"This component displays the Magic Mirror clock module inside your Teletron environment."}}},{"version":"1.0.1","name":"mm-weather","displayName":"Weather (Magic Mirror)","homepage":"https://github.com/daangemist/teletron-extension-mm-weather","author":"daangemist","archiveLocation":"extension-mm-weather/extension-mm-weather.tar.gz","readmeMarkdown":"# Magic Mirror Weather extension\n\nThis extension is a wrapper around the Magic Mirror [weather module](https://docs.magicmirror.builders/modules/weather.html).\n\nAll credits for its implementation go to its original author(s). Read the software's [copyright notice](https://github.com/MichMich/MagicMirror/blob/master/LICENSE.md). More information on the module can be found in the [MagicMirror docs](https://docs.magicmirror.builders/modules/clock.html).\n\nThis extension wraps the Magic Mirror weather module to work with [Teletron](https://www.teletron.me) as an extension.\n\n![current weather](docs/weather_current.png)\n\nAn example of the current weather\n\n![forecast weather](docs/weather_forecast.png)\n\nAn example of the weather forecast\n\n## Features\n\nThis weather extension has an extended array of features. It can:\n\n1. Use different providers as the source\n   1. OpenWeatherMap\n   2. WeatherGov\n   3. Met Office Weather DataHub\n   4. Met Office\n   5. Weatherbit,\n   6. Environment Canada\n   7. Weatherflow\n2. Show current weather, hourly forecast, general forecast\n3. Display information in metric or imperial units\n4. Customizable list information to display (wind, humidity, wind chill)\n\n# Providers\n\nThe [Magic Mirror configuration page](https://docs.magicmirror.builders/modules/weather.html#configuration-options) provides\nextended information on the configuration options for each provider.\n\nBelow is some more provider specific information.\n\n## Environment Canada\n\nIt supports Canadian locations only.\n\nWhen using the `type: \"forecast\"` config, the module can display a max of 6 days (Today + the next 5 days). The forecast for each day reflects the daytime forecast. The Today forecast is a special case that will reflect the daytime forecast until late afternoon, after which Today will be reflecting the nightime forecast for the current day.\n\nWhen using the `type: \"hourly\"` config, the module can display a max of 24 hours.\n","keywords":["weather","forecast","magic-mirror"],"components":{"clock":{"displayName":"Weather","keywords":["weather","forecast","temperature"],"description":"This component displays the Magic Mirror weather module inside your Teletron environment."}}},{"version":"1.0.0","name":"quotes","displayName":"quotes","archiveLocation":"extension-quotes/extension-quotes.tar.gz","readmeMarkdown":"# Quotes extension\n\nThis extension allows you to display a quote on your Display. It selects a random quote out of a set and displays it.\nIt will display it for a period of time, after which it is replaced with a new one.\n\nYou can also choose to provide your own set of quotes.\n\nAdditionally you can choose to shorten the display time of the quote. It will then disappear and nothing will be visible\nuntil the new quote is selected.\n\n![quotes gif](docs/quotes.gif)\n\n## Details of a quote\n\nA quote consists of a text, and optionally an author for the quote. For example:\n\n```\nIn my experience, there is only one motivation, and that is desire. No reasons or principle contain it or stand against it.\n- Jane Smiley\n```\n","keywords":["quotes","inspiration","text"],"components":{"quotes":{"displayName":"Quotes","keywords":["quotes","random","citation"],"description":"Display a random quote, randomly cycle through a list of quotes. Specificy your own or use the predefined list."}}},{"version":"1.1.0","name":"sentry","displayName":"Sentry","author":"daangemist","archiveLocation":"extension-sentry/extension-sentry.tar.gz","readmeMarkdown":"# Sentry\n\nThis extension allows you to add Sentry error logging to your Teletron environment. Any errors\nthat are caught on the node backend and the web frontend will be logged to sentry.\n\nNo widgets or components are available for this extension. Sentry is initialized once the DSN is configured.\n\n## Configuration\n\nIts configuration requires your Sentry DSN. You can retrieve it from your [sentry.io](https://sentry.io)\nproject settings.\n\nYou can access your Teletron extension configuration by opening the _Extensions_ menu option in the CMS.\n","keywords":["sentry","errors","troubleshooting"]},{"version":"1.0.0","name":"task-rotator","displayName":"Task Rotator","author":"daangemist","archiveLocation":"extension-task-rotator/extension-task-rotator.tar.gz","readmeMarkdown":"# Task Rotator Extension\n\nThis extension allows you to create a set of task carrousels that are related.\n\nThe starting point is that you have a group of tasks you go through periodically. And for each\nof these tasks you have the same subtasks that you perform.\n\nIt allows you to easily go through repeating tasks, keeping track of where you are. It's\nalso possible to navigate through the tasks and then to easily return to your active task.\n\nThere is no limit to the number of sections you can configure.\n\n## Example\n\nFor example, assume you are maintaining a set of [Teletron extensions](https://www.teletron.me/extensions). The list of extensions is your first carrousel with tasks.\nAnd for each extension you have the following subtasks:\n\n1. Update dependencies\n2. Fix bugs\n3. Add features\n4. Release\n\nThis can be configured as shown in the gif below:\n\n![example gif](docs/extension-tasks.gif)\n\n## Bottom up vs Top down\n\nIn the example above the main task is the list of extensions, while the tasks below are\nexecuted for each extension. This example is configured **Top down**, this means that if the section\nat the top is completed, the sections below it are reset to the first task.\n\nA **Bottom up** approach is also possible. Here if a task is completed within a section,\nall sections above it are reset to the start.\n","keywords":["tasks","carrousel"],"components":{"carrousel":{"displayName":"Task Carrousel","keywords":["task","carrousel","todo"],"description":"Organize related tasks inside sections in carrousels, horizontally. Once a task in one section is completed, reset a different section with tasks to its first task in the section."}}},{"version":"2.0.0","name":"task-tracker","displayName":"Task Tracker","archiveLocation":"extension-task-tracker/extension-task-tracker.tar.gz","readmeMarkdown":"","keywords":[]},{"version":"2.1.0","name":"timer","displayName":"Timer","author":"daangemist","archiveLocation":"extension-timer/extension-timer.tar.gz","readmeMarkdown":"# Timer\n\nEasily add a countdown timer to your Teletron instance. Start and stop it on your display and see the\nhours, minutes and seconds tick away.\n\nYou can configure any duration you'd like. Timer durations can range from seconds to hours.\n\n![timer](docs/timer.gif)\n\nThe progress on the timer is saved in the browser, so it keeps working when you refresh the page.\n","keywords":[],"components":{"simple":{"displayName":"Simple","keywords":["timer","simple","countdown"],"description":"A straight-forward timer. Just set the time, start it on the display and let it count down."}}},{"version":"2.0.0","name":"uptime-robot","displayName":"Uptime Robot","archiveLocation":"extension-uptime-robot/extension-uptime-robot.tar.gz","readmeMarkdown":"# UptimeRobot\n\nThis extensions displays your Uptime Robot information. It will show you when one or more of your monitor\nentries fails. If offers both a widget and a component, so you can choose your own level of detail.\n\nThe widget will display a ✔️ or the number of monitors with an error. The component displays a ✔️ or a list\nof the monitors with an error.\n\n![uptime-robot](docs/uptime-robot.gif)\n\n## Configuration\n\nIts configuration requires your Uptime Robot API key. You can retrieve this by opening your\n[UptimeRobot dashboard](https://uptimerobot.com/dashboard)], clicking/tapping your email address\nin the top right corner and selecting _My Settings_.\n\nIn the bottom right of your settings page there is a section called _ API Settings_. There you\ncan copy the _Read-Only API Key_ and paste that in your Teletron configuration of the extension,\nin the CMS.\n\nYou can access your extension configuration by opening the _Extensions_ menu option in the CMS.\n\n# Attributions\n\nThe loader is `dot-revolve` from [css-spinners](https://github.com/n3r4zzurr0/svg-spinners).\n","keywords":[],"components":{"monitorlist":{"description":"Shows a list of the monitor entries with an error.","displayName":"Monitors","keywords":["monitor","error"]}},"widgets":{"monitors":{"description":"Displays the number of monitors with an error.","displayName":"Monitors","keywords":["monitors","counter"]}}},{"version":"2.1.0","name":"youtube","displayName":"Youtube","archiveLocation":"extension-youtube/extension-youtube.tar.gz","readmeMarkdown":"# Youtube\n\nDisplay a Youtube playlist or set of Youtube playlists on your Teletron display. Play videos directly\nfrom your display and enjoy!\n\n![youtube gif](docs/youtube.gif)\n\n## Obtaining the playlist ID\n\nYou need the playlist ID for the configuration of the components. You can get the playlist ID for any\nplaylist by:\n\n1. Navigating to the playlist on youtube.com\n2. The URL in your browser should look something like this: `https://www.youtube.com/watch?v=kruqyd56oMU&list=PL-7t9DoIELCS7VIrtZoPUxDQZxEjvke7d`\n3. The playlist ID is the part of the URL after `list=`, so in this case: `PL-7t9DoIELCS7VIrtZoPUxDQZxEjvke7d`\n4. Use that value in the configuration when a playlist ID is required.\n\n## Configuration\n\nYou need to obtain a youtube API key from Google to allow the extension to query Youtube data.\n\nFollow these steps to obtain one:\n\n1. Log in to Google Developers Console.\n2. Create a new project.\n3. On the new project dashboard, click Explore & Enable APIs.\n4. In the library, navigate to YouTube Data API v3 under YouTube APIs.\n5. Enable the API.\n6. Create a credential.\n7. A screen will appear with the API key.\n\nView a follow along explanation in [this video](https://www.youtube.com/watch?v=yuM7KH-JLu8).\n\nOnce you have obtained the API key, you can configure the youtube extension by opening the _Extensions_ menu\nin the CMS.\n","keywords":[],"components":{"playlist":{"displayName":"Playlist","keywords":["video","playlist"],"description":"Display and play the videos from a single playlist inline from youtube."},"playlists":{"displayName":"Playlists","keywords":["video","playlists","multiple"],"description":"List multiple playlists and play their videos inline from youtube."}}}]}